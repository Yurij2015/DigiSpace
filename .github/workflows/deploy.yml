name: Deploy Application

on:
  push:
    branches: [ master ]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    outputs:
      DEPLOYMENT_MATRIX: ${{ steps.export-deployment-matrix.outputs.DEPLOYMENT_MATRIX }}
    steps:
      - uses: actions/checkout@v4
      - name: Composer install
        run: |
          composer install --no-dev --no-interaction --prefer-dist
      - name: Install project dependencies
        run: npm install
      - name: Build project
        run: npm run build
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Export deployment matrix
        id: export-deployment-matrix
        run: |
          delimiter="$(openssl rand -hex 8)"
          JSON="$(cat ./deployment-config.json)"
          echo "DEPLOYMENT_MATRIX<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$JSON" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

  prepare-release-on-servers:
    name: "${{ matrix.server.name }}: Prepare release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy:
      matrix:
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.DEPLOYMENT_MATRIX) }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ matrix.server.ip }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ matrix.server.port }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ matrix.server.path }}/artifacts
